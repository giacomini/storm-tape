# Use the official docker image.
image: docker:latest
services:
  - docker:dind

stages:
  - build
  - docker-build
  - test

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_JOB_TOKEN" $CI_REGISTRY

build_storm_tape:
  stage: build
  script:
    - mkdir build/
    - |
      - cmake --no-warn-unused-cli -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE
      -DCMAKE_BUILD_TYPE:STRING=Debug -S . \
      -B /build -G Ninja
    - cmake --build build/ --config Debug --target all
  artifacts:
    paths:
    - build/storm-tape.tar.gz

docker-build:
  stage: docker-build
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" -f ./docker/Dockerfile .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
 
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - docker/Dockerfile

test_container:
  stage: test
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker pull "$CI_REGISTRY_IMAGE${tag}"
    - docker run "$CI_REGISTRY_IMAGE${tag}" /test/test_script.sh